# get Miniconda
curl -fsSL https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh

# Create conda environment
conda create --name search python=3.10
conda activate search
pip install --upgrade pip
conda install -c conda-forge cudatoolkit=11.2 cudnn=8.1.0
pip install tensorflow
pip install jupyter
pip install jupyter_contrib_nbextensions
jupyter contrib nbextension install --user
pip install numpy pandas matplotlib pillow joblib scikit-learn streamlit requests

pip install pyspark findspark
pip install requests

python -m pip install fastapi uvicorn[standard]

#=====================
# Docker 
curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
# Post-installation steps for Linux.
sudo groupadd docker
sudo usermod -aG docker $USER
newgrp docker
docker ps
docker run hello-world

#============Gpu setup ubuntu 20.04========
lspci | grep -i vga
nvidia-smi
lscpu
free -h

sudo add-apt-repository ppa:graphics-drivers/ppa
sudo apt-get update
sudo apt-get install nvidia-driver-470
sudo reboot
nvidia-smi
nvcc --version

sudo rm /etc/apt/sources.list.d/cuda*
sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub
sudo sh -c 'echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /" > /etc/apt/sources.list.d/cuda.list'
sudo apt-get update
sudo apt-get install -y cuda-toolkit-11-4 --no-install-recommends

echo 'export PATH=/usr/local/cuda-11.4/bin:$PATH' >> ~/.bashrc
echo 'export LD_LIBRARY_PATH=/usr/local/cuda-11.4/lib64:$LD_LIBRARY_PATH' >> ~/.bashrc
source ~/.bashrc

wget https://developer.download.nvidia.com/compute/cudnn/9.4.0/local_installers/cudnn-local-repo-ubuntu2004-9.4.0_1.0-1_amd64.deb
sudo dpkg -i cudnn-local-repo-ubuntu2004-9.4.0_1.0-1_amd64.deb
sudo cp /var/cudnn-local-repo-ubuntu2004-9.4.0/cudnn-*-keyring.gpg /usr/share/keyrings/
sudo apt-get update
sudo apt-get -y install cudnn
sudo apt-get -y install cudnn-cuda-11



python3 -m venv tf-env
source tf-env/bin/activate
pip install --upgrade pip
pip install tensorflow

# From the NVIDIA CuDNN download page, choose the appropriate version of CuDNN for CUDA 11.4 on Ubuntu 20.04. Download the following .deb files:
sudo dpkg -i libcudnn8_*.deb
cat /usr/include/cudnn_version.h | grep CUDNN_MAJOR -A 2
export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH


python -c "import tensorflow as tf; print('Num GPUs Available: ', len(tf.config.list_physical_devices('GPU')))"

#===========verify=========
# 1. Check general hardware information
lscpu
free -h

# 2. Check GPU information and driver
lspci | grep -i vga
nvidia-smi

# 3. Check NVIDIA driver version
cat /proc/driver/nvidia/version

# 4. Check CUDA version
nvcc --version
cat /usr/local/cuda/version.txt

# 5. Check CuDNN version
cat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2

# 6. Check TensorFlow installation and GPU availability
python3 -c "import tensorflow as tf; print(tf.__version__); print('Num GPUs Available: ', len(tf.config.list_physical_devices('GPU')))"

# 7. Check environment variables
echo $PATH | grep cuda
echo $LD_LIBRARY_PATH | grep cuda

#===========virtualbox
sudo apt update
sudo apt upgrade

sudo apt install gcc make perl
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib"
sudo apt update
sudo apt install virtualbox-7.0
wget https://download.virtualbox.org/virtualbox/7.0.6/Oracle_VM_VirtualBox_Extension_Pack-7.0.6.vbox-extpack
sudo VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-7.0.6.vbox-extpack
virtualbox

sudo apt remove virtualbox
sudo apt autoremove

